@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}


@if (User.Identity.IsAuthenticated)
{

    <div class="text-center">
        <h4>Hello Worker @Model.FirstName @Model.LastName. You are Logged In</h4>
        <h3>Your Current Jobs:</h3>
        @*Loop through Jobs List to display all current jobs the Worker has taken on*@
        @foreach (var Job in Model.Jobs)
        {
            <h3><strong>@Job.Title</strong></h3>
            <h4>JOB STATUS</h4>
            <p class="status@(Job.JobId)"></p>
            @if(Job.Pending == true)
            {
                <h5>PENDING</h5>
                <div class="completeBtn">
                    <button type="button" id="@(Job.JobId)" class="setComplete">Set Job as COMPLETE</button>
                </div>
            }
            @if (Job.Completed == true)
            {
                <h5>COMPLETED</h5>
            }
            @if(Model.Avaliable == true && Job.Completed != true)
            {
                <div class="avaliableBtn">
                    <button type="button" id="@(Job.JobId)" class="setAvaliable">Set Job as ACTIVE</button>
                </div>
            }

        }
        @*Active Job Script*@
        <script type="text/javascript">
                    $(document).ready(function () {
                        $('.setAvaliable').click(function () {
                            var JobId = this.id;
                            $.ajax({
                                type: 'GET',
                                data: { JobId: JobId, WorkerId: @Model.WorkerId },
                                url: '@Url.Action("SetAvaliableToFalse")',
                                success: function (result) {
                                    $('.status' + result).html("ACTIVE");
                                    $('.avaliableBtn').hide();
                                }
                            });
                        });
                        $('.setComplete').click(function () {
                            var JobId = this.id;
                            $.ajax({
                                type: 'GET',
                                data: { JobId: JobId, WorkerId: @Model.WorkerId },
                                url: '@Url.Action("SetComplete")',
                                success: function (result) {
                                    $('.status' + result).html("COMPLETE");
                                    $('.completeBtn').hide();
                                }
                            });
                        });
                    });
        </script>
        @*If the worker is available, prompt him to select a job, and send him to the job controllers index*@
        @*Else prompt worker he has already been assigned a job*@
        @if (Model.Avaliable)
        {
            <h2>Please @Html.ActionLink("select a job", "Index", "Jobs").</h2>
        }
        else
        {
            <p>You are already assigned to a job.</p>
        }
    </div>
}